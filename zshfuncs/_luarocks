#compdef luarocks

_luarocks() {
  local curcontext="$curcontext"
  local context state state_descr line
  typeset -A opt_args

  _arguments -C -S \
    '--server=[Fetch rocks/rockspecs from this server (takes priority over config file)]:server' \
    '--only-server=[Fetch rocks/rockspecs from this server only (overrides any entries in the config file)]:server' \
    '--only-sources=[Restrict downloads to paths matching the given URL.]:url' \
    '--tree=[Which tree to operate on.]:tree' \
    '--local[Use the tree in the user'\''s home directory. To enable it, see '\''luarocks help path'\''.]' \
    '--verbose[Display verbose output of commands executed.]' \
    '--timeout=[Timeout on network operations, in seconds. 0 means no timeout (wait forever). Default is 30.]:seconds' \
    ":command:->command"

  local -a luarocks_commands
  luarocks_commands=(
    'build:Build/compile a rock.'
    'config:Query information about the LuaRocks configuration.'
    'doc:Show documentation for an installed rock.'
    'download:Download a specific rock file from a rocks server.'
    'help:Help on commands. Type '\''luarocks help <command>'\'' for more.'
    'install:Install a rock.'
    'lint:Check syntax of a rockspec.'
    'list:List currently installed rocks.'
    'make:Compile package in current directory using a rockspec.'
    'new_version:Auto-write a rockspec for a new version of a rock.'
    'pack:Create a rock, packing sources or binaries.'
    'path:Return the currently configured package path.'
    'purge:Remove all installed rocks from a tree.'
    'remove:Uninstall a rock.'
    'search:Query the LuaRocks servers.'
    'show:Show information about an installed rock.'
    'unpack:Unpack the contents of a rock.'
    'upload:Upload a rockspec to the public rocks repository.'
    'write_rockspec:Write a template for a rockspec file.'
  )

  case x$state in
    xcommand)
      _describe -t commands luarocks luarocks_commands
      ;;
  esac
}
