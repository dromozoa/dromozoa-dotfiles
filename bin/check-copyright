#! /usr/bin/env lua

-- Copyright (C) 2018,2019 Tomoyuki Fujimori <moyu@dromozoa.com>
--
-- This file is part of dromozoa-dotfiles.
--
-- dromozoa-dotfiles is free software: you can redistribute it and/or modify
-- it under the terms of the GNU General Public License as published by
-- the Free Software Foundation, either version 3 of the License, or
-- (at your option) any later version.
--
-- dromozoa-dotfiles is distributed in the hope that it will be useful,
-- but WITHOUT ANY WARRANTY; without even the implied warranty of
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-- GNU General Public License for more details.
--
-- You should have received a copy of the GNU General Public License
-- along with dromozoa-dotfiles.  If not, see <http://www.gnu.org/licenses/>.

package.path = os.getenv "HOME" .. "/dromozoa-dotfiles/?.lua;" .. package.path

local shell = require "dromozoa.shell"

local author = "Tomoyuki Fujimori"

local help = [[
Usage: check-copyright [options]
Avairable options are:
  -h  --help
  -q  --quiet
]]

local options = {}

local i = 1
local n = #arg
while i <= n do
  local this = arg[i]
  i = i + 1
  if this == "-h" or this == "--help" then
    io.stderr:write(help)
    os.exit()
  elseif this == "-q" or this == "--quiet" then
    options.quiet = true
  elseif this == "--" then
    break
  elseif this:find "^%-" then
    io.stderr:write(("check-copyright unrecognized option '%s'\n"):format(this), help)
    os.exit(1)
  else
    i = i - 1
    break
  end
end

local code = 0

local handle = assert(io.popen "git ls-files -z")
local content = handle:read "*a"
handle:close()
for file in content:gmatch "(.-)%z" do
  if not file:find "^bind/" then
    local source
    local handle = assert(io.open(file))
    for line in handle:lines() do
      if line:find "Copyright %(C%)" and line:find(author, 1, true) then
        source = line
        break
      end
    end
    handle:close()

    if not source then
      if not options.quiet then
        io.write("[  ] ", file, "\n")
      end
    else
      local year_set = {}
      local command = ([[git log --author=%s --date="format:%%Y" --format="%%ad" %s]]):format(shell.quote(author), shell.quote(file))
      local handle = assert(io.popen(command))
      for line in handle:lines() do
        year_set[tonumber(line)] = true
      end
      handle:close()

      local year_list = {}
      for k in pairs(year_set) do
        year_list[#year_list + 1] = k
      end
      table.sort(year_list)

      local year_range = { year_list[1], year_list[1] }
      local year_ranges = { year_range }
      for i = 2, #year_list do
        local year = year_list[i]
        if year_range[2] == year - 1 then
          year_range[2] = year
        else
          year_range = { year, year }
          year_ranges[#year_ranges + 1] = year_range
        end
      end

      local years = ""
      for i = 1, #year_ranges do
        local year_range = year_ranges[i]
        local year1 = year_range[1]
        local year2 = year_range[2]
        if years ~= "" then
          years = years .. ","
        end
        if year1 == year2 then
          years = years .. year1
        elseif year1 == year2 - 1 then
          years = years .. year1 .. "," .. year2
        else
          years = years .. year1 .. "-" .. year2
        end
      end

      local target = source:gsub("^(.-Copyright %(C%) )[%d%,%-]+( .*)", "%1" .. years .. "%2")
      if source == target then
        if not options.quiet then
          io.write("[OK] ", file, "\n")
        end
      else
        code = 1
        io.write("[NG] ", file, "\n")
        io.write("\t", source, "\n")
        io.write("\t", target, "\n")
      end
    end
  end
end

os.exit(code)
